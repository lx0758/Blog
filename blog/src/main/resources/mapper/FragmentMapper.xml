<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liux.blog.dao.FragmentMapper">
  <resultMap id="BaseResultMap" type="com.liux.blog.bean.po.Fragment">
    <!--@mbg.generated-->
    <!--@Table t_fragment-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="key" jdbcType="VARCHAR" property="key" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <association column="author_id" property="author" select="com.liux.blog.dao.UserMapper.getByMapper"/>
  </resultMap>
  <resultMap id="ItemResultMap" type="com.liux.blog.bean.po.Fragment">
    <!--@mbg.generated-->
    <!--@Table t_fragment-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="key" jdbcType="VARCHAR" property="key" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, "key", content, author_id, "status", create_time, update_time
  </sql>
  <sql id="Item_Column_List">
    <!--@mbg.generated-->
    id, "key", author_id, "status", create_time, update_time
  </sql>
  <select id="getByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from t_fragment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByAdmin" parameterType="com.liux.blog.bean.po.Fragment" resultMap="BaseResultMap">
    select
    <include refid="Item_Column_List" />
    from t_fragment
    where 1 = 1
    <if test="key != null and key != ''">
      and upper("key") like upper(CONCAT('%', #{key,jdbcType=LONGVARCHAR}, '%'))
    </if>
    <if test="content != null and content != ''">
      and upper("content") like upper(CONCAT('%', #{content,jdbcType=LONGVARCHAR}, '%'))
    </if>
    <if test="status != null">
      and status = #{status,jdbcType=INTEGER}
    </if>
    order by id desc
  </select>
  <select id="getByIdOrKey" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List"/>
    from t_fragment
    where status = 1 and (id = #{id,jdbcType=INTEGER} OR "key" = #{key,jdbcType=VARCHAR})
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from t_fragment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.liux.blog.bean.po.Fragment">
    <!--@mbg.generated-->
    insert into t_fragment (id, "key", content,
      author_id, "status", create_time,
      update_time)
    values (#{id,jdbcType=INTEGER}, #{key,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
      #{authorId,jdbcType=INTEGER}, #{status,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id"  parameterType="com.liux.blog.bean.po.Fragment"
          useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_fragment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="key != null">
        "key",
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="status != null">
        "status",
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="key != null">
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liux.blog.bean.po.Fragment">
    <!--@mbg.generated-->
    update t_fragment
    <set>
      <if test="key != null">
        "key" = #{key,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        "status" = #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liux.blog.bean.po.Fragment">
    <!--@mbg.generated-->
    update t_fragment
    set "key" = #{key,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=INTEGER},
      "status" = #{status,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>