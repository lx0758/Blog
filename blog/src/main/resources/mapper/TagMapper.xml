<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liux.blog.dao.TagMapper">
    <resultMap id="BaseResultMap" type="com.liux.blog.bean.po.Tag">
        <!--@mbg.generated-->
        <!--@Table t_tag-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <resultMap id="CountResultMap" type="com.liux.blog.bean.po.Tag">
        <!--@mbg.generated-->
        <!--@Table t_tag-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="article_count" javaType="INTEGER" property="articleCount"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, `name`, create_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from t_tag
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from t_tag
        where name = #{name,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete
        from t_tag
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.liux.blog.bean.po.Tag"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_tag (`name`, create_time)
        values (#{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.liux.blog.bean.po.Tag"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_tag
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.liux.blog.bean.po.Tag">
        <!--@mbg.generated-->
        update t_tag
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.liux.blog.bean.po.Tag">
        <!--@mbg.generated-->
        update t_tag
        set `name`      = #{name,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByArticle" resultMap="BaseResultMap">
        select t_tag.id,
               t_tag.`name`,
               t_tag.create_time
        from t_article_tag
                     LEFT JOIN t_tag ON t_article_tag.tag_id = t_tag.id
        where t_article_tag.article_id = #{articleId}
    </select>
    <select id="selectByCount" resultMap="CountResultMap">
        select t_tag.id, t_tag.`name`, t_tag.create_time, COUNT(`tag_id`) as article_count
        FROM t_article_tag
                     LEFT JOIN t_tag ON t_article_tag.tag_id = t_tag.id
        GROUP BY tag_id, name ORDER BY name
    </select>
    <select id="selectByAdmin" parameterType="com.liux.blog.bean.po.Tag" resultMap="CountResultMap">
        select t_tag.id, t_tag.`name`, t_tag.create_time, COUNT(`tag_id`) as article_count
        FROM t_article_tag
                     LEFT JOIN t_tag ON t_article_tag.tag_id = t_tag.id
            WHERE 1 = 1
            <if test="name != null and name != ''">
                and name like CONCAT('%', #{name}, '%')
            </if>
        GROUP BY tag_id
    </select>
    <select id="selectCount" resultType="INTEGER">
        SELECT count(1) FROM (select 1 from t_article_tag group by tag_id) as temp
    </select>
</mapper>
