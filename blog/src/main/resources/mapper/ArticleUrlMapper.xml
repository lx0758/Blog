<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liux.blog.dao.ArticleUrlMapper">
  <resultMap id="BaseResultMap" type="com.liux.blog.bean.po.ArticleUrl">
    <!--@mbg.generated-->
    <!--@Table t_article_url-->
    <id column="url" jdbcType="VARCHAR" property="url" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    url, article_id, "status", create_time
  </sql>
  <select id="getCurrentUrlByArticleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from t_article_url
    where status = 1 and article_id = #{articleId,jdbcType=INTEGER}
  </select>
  <select id="getByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from t_article_url
    where url = #{url,jdbcType=VARCHAR}
  </select>
  <select id="selectByArticleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from t_article_url
    where article_id = #{articleId,jdbcType=INTEGER}
    order by status desc, create_time
  </select>
  <delete id="deleteByArticleId" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from t_article_url
    where article_id = #{articleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--@mbg.generated-->
    delete from t_article_url
    where url = #{url,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.liux.blog.bean.po.ArticleUrl">
    <!--@mbg.generated-->
    insert into t_article_url (url, article_id, "status", 
      create_time)
    values (#{url,jdbcType=VARCHAR}, #{articleId,jdbcType=INTEGER}, #{status,jdbcType=SMALLINT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.liux.blog.bean.po.ArticleUrl">
    <!--@mbg.generated-->
    insert into t_article_url
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="url != null">
        url,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="status != null">
        "status",
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateToHistoryByArticleId" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    update t_article_url
    set status = 0
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liux.blog.bean.po.ArticleUrl">
    <!--@mbg.generated-->
    update t_article_url
    <set>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        "status" = #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where url = #{url,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liux.blog.bean.po.ArticleUrl">
    <!--@mbg.generated-->
    update t_article_url
    set article_id = #{articleId,jdbcType=INTEGER},
      "status" = #{status,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where url = #{url,jdbcType=VARCHAR}
  </update>
</mapper>