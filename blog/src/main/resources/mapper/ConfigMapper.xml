<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liux.blog.dao.ConfigMapper">
  <resultMap id="BaseResultMap" type="com.liux.blog.bean.po.Config">
    <!--@mbg.generated-->
    <!--@Table t_config-->
    <id column="key" jdbcType="VARCHAR" property="key" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    `key`, `value`, description, create_time, update_time
  </sql>
  <select id="getByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from t_config
    where `key` = #{key,jdbcType=VARCHAR}
  </select>
  <select id="selectByTheme" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_config
  </select>
  <select id="selectByAdmin" parameterType="com.liux.blog.bean.po.Config" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_config
    where 1 = 1
    <if test="key != null and key != ''">
      and `key` like CONCAT('%', #{key}, '%')
    </if>
    <if test="value != null and value != ''">
      and `value` like CONCAT('%', #{value}, '%')
    </if>
    <if test="description != null and description != ''">
      and `description` like CONCAT('%', #{description}, '%')
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--@mbg.generated-->
    delete from t_config
    where `key` = #{key,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.liux.blog.bean.po.Config">
    <!--@mbg.generated-->
    insert into t_config (`key`, `value`, description,
      create_time, update_time)
    values (#{key,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.liux.blog.bean.po.Config">
    <!--@mbg.generated-->
    insert into t_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="key != null">
        `key`,
      </if>
      <if test="value != null">
        `value`,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="key != null">
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liux.blog.bean.po.Config">
    <!--@mbg.generated-->
    update t_config
    <set>
      <if test="value != null">
        `value` = #{value,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where `key` = #{key,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liux.blog.bean.po.Config">
    <!--@mbg.generated-->
    update t_config
    set `value` = #{value,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where `key` = #{key,jdbcType=VARCHAR}
  </update>
</mapper>
