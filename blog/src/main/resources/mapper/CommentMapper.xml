<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liux.blog.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.liux.blog.bean.po.Comment">
    <!--@mbg.generated-->
    <!--@Table t_comment-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="ua" jdbcType="VARCHAR" property="ua" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <association property="article" select="com.liux.blog.dao.ArticleMapper.getByMapper" column="article_id"/>
    <association property="childs" javaType="java.util.List" select="selectChildById" column="id" />
  </resultMap>
  <resultMap id="ItemResultMap" type="com.liux.blog.bean.po.Comment">
    <!--@mbg.generated-->
    <!--@Table t_comment-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="ua" jdbcType="VARCHAR" property="ua" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <association property="article" select="com.liux.blog.dao.ArticleMapper.getByMapper" column="article_id"/>
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, article_id, parent_id, author, author_id, email, url, content, ip, ua, status,
    create_time, update_time
  </sql>
  <select id="selectByArticleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from t_comment
    where status = 1 and parent_id is NULL and article_id = #{articleId,jdbcType=INTEGER}
  </select>
  <select id="selectChildById" parameterType="java.lang.Integer" resultMap="ItemResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from t_comment
    where status = 1 and parent_id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from t_comment
    where status = 1 and id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getCount" resultType="java.lang.Integer">
    select count(id)
    from t_comment
    where status = 1
  </select>
  <select id="selectByAdmin" parameterType="com.liux.blog.bean.po.Comment" resultMap="ItemResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from t_comment
    where 1 = 1
    <if test="articleId != null">
      and article_id = #{articleId}
    </if>
    <if test="author != null and author != ''">
      and author like CONCAT('%', #{author}, '%')
    </if>
    <if test="email != null and email != ''">
      and email like CONCAT('%', #{email}, '%')
    </if>
    <if test="ip != null and ip != ''">
      and ip like CONCAT('%', #{ip}, '%')
    </if>
    <if test="content != null and content != ''">
      and content like CONCAT('%', #{content}, '%')
    </if>
    <if test="status != null">
      and status = #{status}
    </if>
    order by id desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from t_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCleanChild" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from t_comment
    where parent_id = #{parentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.liux.blog.bean.po.Comment" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_comment (article_id, parent_id, author,
      author_id, email, url,
      content, ip, ua, status,
      create_time, update_time)
    values (#{articleId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{author,jdbcType=VARCHAR},
      #{authorId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR},
      #{content,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{ua,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.liux.blog.bean.po.Comment" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        article_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="ua != null">
        ua,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="ua != null">
        #{ua,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liux.blog.bean.po.Comment">
    <!--@mbg.generated-->
    update t_comment
    <set>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="ua != null">
        ua = #{ua,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liux.blog.bean.po.Comment">
    <!--@mbg.generated-->
    update t_comment
    set article_id = #{articleId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      ua = #{ua,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByLatest" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_comment
        limit #{size,jdbcType=INTEGER}
    </select>
</mapper>
