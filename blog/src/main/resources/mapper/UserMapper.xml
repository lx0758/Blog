<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liux.blog.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.liux.blog.bean.po.User">
        <!--@mbg.generated-->
        <!--@Table t_user-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="accounts" javaType="com.liux.blog.bean.po.User$Accounts" property="accounts"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <resultMap id="AuthorResultMap" type="com.liux.blog.bean.po.User">
        <!--@mbg.generated-->
        <!--@Table t_user-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, username, "password", avatar, nickname, description, email, accounts, last_login_time, status,
        create_time, update_time
    </sql>
    <select id="getByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from t_user
        where status = 1
          and id = #{id,jdbcType=INTEGER}
    </select>
    <select id="getByMapper" parameterType="java.lang.Integer" resultMap="AuthorResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from t_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="getByOwner" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from t_user
        where id = 1
    </select>
    <select id="getByUsername" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where username = #{username,jdbcType=VARCHAR}
    </select>
    <select id="selectByAdmin" parameterType="com.liux.blog.bean.po.User" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
                where 1 = 1
        <if test="username != null and username != ''">
            and upper(username) like upper(CONCAT('%', #{username}, '%'))
        </if>
        <if test="nickname != null and nickname != ''">
            and upper(nickname) like upper(CONCAT('%', #{nickname}, '%'))
        </if>
        <if test="status != null">
            and status = #{status}
        </if>
        order by id desc
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete
        from t_user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.liux.blog.bean.po.User"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_user (username, "password", avatar, nickname,
                            description, email, accounts, last_login_time,
                            status, create_time,
                            update_time)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},
                #{description,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{accounts}, #{lastLoginTime,jdbcType=TIMESTAMP},
                #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.liux.blog.bean.po.User"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                "password",
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="accounts != null">
                accounts,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="accounts != null">
                #{accounts},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.liux.blog.bean.po.User">
        <!--@mbg.generated-->
        update t_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                "password" = #{password,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="accounts != null">
                accounts = #{accounts},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyNullable" parameterType="com.liux.blog.bean.po.User">
        <!--@mbg.generated-->
        update t_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                "password" = #{password,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null or avatar == null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="description != null or description == null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="accounts != null or accounts == null">
                accounts = #{accounts},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.liux.blog.bean.po.User">
        <!--@mbg.generated-->
        update t_user
        set username        = #{username,jdbcType=VARCHAR},
            "password"      = #{password,jdbcType=VARCHAR},
            avatar          = #{avatar,jdbcType=VARCHAR},
            nickname        = #{nickname,jdbcType=VARCHAR},
            description     = #{description,jdbcType=VARCHAR},
            email           = #{email,jdbcType=VARCHAR},
            accounts        = #{accounts},
            last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            status          = #{status,jdbcType=TINYINT},
            create_time     = #{createTime,jdbcType=TIMESTAMP},
            update_time     = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
