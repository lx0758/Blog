<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liux.blog.dao.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.liux.blog.bean.po.Article">
        <!--@mbg.generated-->
        <!--@Table t_article-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="LONGVARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="author_id" jdbcType="VARCHAR" property="authorId"/>
        <result column="weight" jdbcType="INTEGER" property="weight"/>
        <result column="views" jdbcType="INTEGER" property="views"/>
        <result column="comment_status" jdbcType="TINYINT" property="commentStatus"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <association column="category_id" property="category" select="com.liux.blog.dao.CategoryMapper.getByMapper"/>
        <association column="author_id" property="author" select="com.liux.blog.dao.UserMapper.getByMapper"/>
        <association column="id" property="url" select="com.liux.blog.dao.ArticleUrlMapper.getCurrentUrlByArticleId"/>
        <collection column="id" property="tags" javaType="java.util.List" ofType="com.liux.blog.bean.po.Tag" select="com.liux.blog.dao.TagMapper.selectByArticleId"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, title, content, weight, views, comment_status,
        status, create_time, update_time, category_id, author_id
    </sql>
    <resultMap id="ItemResultMap" type="com.liux.blog.bean.po.Article">
        <!--@mbg.generated-->
        <!--@Table t_article-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="LONGVARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="weight" jdbcType="INTEGER" property="weight"/>
        <result column="views" jdbcType="INTEGER" property="views"/>
        <result column="comment_status" jdbcType="TINYINT" property="commentStatus"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <association column="category_id" property="category" select="com.liux.blog.dao.CategoryMapper.getByMapper"/>
        <association column="id" property="url" select="com.liux.blog.dao.ArticleUrlMapper.getCurrentUrlByArticleId"/>
    </resultMap>
    <sql id="Item_Column_List">
        <!--@mbg.generated-->
        id, title, content, weight, views, comment_status,
        status, create_time, update_time, category_id
    </sql>
    <resultMap id="AdminItemResultMap" type="com.liux.blog.bean.po.Article">
        <!--@mbg.generated-->
        <!--@Table t_article-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="LONGVARCHAR" property="title"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="weight" jdbcType="INTEGER" property="weight"/>
        <result column="views" jdbcType="INTEGER" property="views"/>
        <result column="comment_status" jdbcType="TINYINT" property="commentStatus"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <association column="category_id" property="category" select="com.liux.blog.dao.CategoryMapper.getByMapper"/>
        <association column="id" property="url" select="com.liux.blog.dao.ArticleUrlMapper.getCurrentUrlByArticleId"/>
        <collection column="id" property="urls" javaType="java.util.List" ofType="com.liux.blog.bean.po.ArticleUrl" select="com.liux.blog.dao.ArticleUrlMapper.selectByArticleId"/>
    </resultMap>
    <sql id="Admin_Item_Column_List">
        <!--@mbg.generated-->
        t_article.id, t_article.title, t_article.weight, t_article.views, t_article.comment_status,
        t_article.status, t_article.create_time, t_article.update_time, t_article.category_id
    </sql>
    <resultMap id="SimpleResultMap" type="com.liux.blog.bean.po.Article">
        <!--@mbg.generated-->
        <!--@Table t_article-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="LONGVARCHAR" property="title"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <association column="id" property="url" select="com.liux.blog.dao.ArticleUrlMapper.getCurrentUrlByArticleId"/>
    </resultMap>
    <sql id="Simple_Column_List">
        <!--@mbg.generated-->
        id, title, create_time
    </sql>
    <resultMap id="SearchResultMap" type="com.liux.blog.bean.po.Article">
        <!--@mbg.generated-->
        <!--@Table t_article-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="LONGVARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <association column="id" property="url" select="com.liux.blog.dao.ArticleUrlMapper.getCurrentUrlByArticleId"/>
    </resultMap>
    <sql id="Search_Column_List">
        <!--@mbg.generated-->
        id, title, content
    </sql>
    <resultMap id="SitemapResultMap" type="com.liux.blog.bean.po.Article">
        <!--@mbg.generated-->
        <!--@Table t_article-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <association column="id" property="url" select="com.liux.blog.dao.ArticleUrlMapper.getCurrentUrlByArticleId"/>
    </resultMap>
    <sql id="Sitemap_Column_List">
        <!--@mbg.generated-->
        id, create_time, update_time
    </sql>
    <select id="getByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from t_article
        where status = 1 and id = #{id,jdbcType=INTEGER}
    </select>
    <select id="getByBlog" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_article
        where status = 1 and id=#{id,jdbcType=INTEGER}
    </select>
    <select id="getByPrev" parameterType="java.lang.Integer" resultMap="SimpleResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Simple_Column_List"/>
        from t_article
        where status = 1 and id &lt; #{articleId,jdbcType=INTEGER}
        order by id desc
        limit 1
    </select>
    <select id="getByNext" parameterType="java.lang.Integer" resultMap="SimpleResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Simple_Column_List"/>
        from t_article
        where status = 1 and id &gt; #{articleId,jdbcType=INTEGER}
        order by id
        limit 1
    </select>
    <select id="getByMapper" parameterType="java.lang.Integer" resultMap="ItemResultMap">
        select
        <include refid="Item_Column_List"/>
        from t_article
        where id=#{id,jdbcType=INTEGER}
    </select>
    <select id="getByAdmin" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_article
        where id=#{id,jdbcType=INTEGER}
    </select>
    <select id="selectByPage" resultMap="ItemResultMap">
        select
        <include refid="Item_Column_List"/>
        from t_article
        where status = 1
        order by weight desc, id desc
    </select>
    <select id="selectByArchive" resultMap="SimpleResultMap">
        select
        <include refid="Simple_Column_List"/>
        from t_article
        where status = 1
        order by id desc
    </select>
    <select id="selectByCategory" resultMap="SimpleResultMap">
        select
        <include refid="Simple_Column_List"/>
        from t_article
        where status = 1 and category_id = #{categoryId,jdbcType=INTEGER}
        order by id desc
    </select>
    <select id="selectByTag" resultMap="SimpleResultMap">
        select
        <include refid="Simple_Column_List"/>
        from t_article
        LEFT JOIN t_article_tag ON t_article.id = t_article_tag.article_id
        where t_article.status = 1 and t_article_tag.tag_id = #{tagId,jdbcType=INTEGER}
        order by id desc
    </select>
    <select id="selectBySearch" resultMap="SearchResultMap">
        select
        <include refid="Search_Column_List"/>
        from t_article
        where status = 1
        order by id desc
    </select>
    <select id="selectBySitemap" resultMap="SitemapResultMap">
        select
        <include refid="Sitemap_Column_List"/>
        from t_article
        where status = 1
        order by id desc
    </select>
    <select id="selectByExport" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_article
        where status = 1
        order by id desc
    </select>
    <select id="selectByAdminDashboard" resultMap="ItemResultMap">
        select
        <include refid="Item_Column_List"/>
        from t_article
        where status = 1
        order by id desc
    </select>
    <select id="selectByAdmin" resultMap="AdminItemResultMap">
        select
        distinct
        <include refid="Admin_Item_Column_List"/>
        from t_article
        left join t_article_url on t_article.id = t_article_url.article_id
        where 1 = 1
        <if test="article.categoryId != null">
            and category_id = #{article.categoryId,jdbcType=INTEGER}
        </if>
        <if test="article.title != null and article.title != ''">
            and upper(title) like upper(CONCAT('%', #{article.title,jdbcType=LONGVARCHAR}, '%'))
        </if>
        <if test="url != null and url != ''">
            and upper(t_article_url.url) like upper(CONCAT('%', #{url,jdbcType=LONGVARCHAR}, '%'))
        </if>
        <if test="article.commentStatus != null">
            and comment_status = #{article.commentStatus,jdbcType=INTEGER}
        </if>
        <if test="article.status != null">
            and t_article.status = #{article.status,jdbcType=INTEGER}
        </if>
        order by id desc
    </select>
    <select id="getCount" resultType="INTEGER">
        select
                count(id)
        from t_article
        where status = 1
    </select>
    <select id="getViews" resultType="INTEGER">
        select
                sum(views)
        from t_article
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete
        from t_article
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.liux.blog.bean.po.Article"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_article (title, content,
        category_id, author_id,
        weight, views,
        comment_status, status,
        create_time, update_time)
        values (#{title,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR},
        #{categoryId,jdbcType=INTEGER}, #{authorId,jdbcType=INTEGER},
        #{weight,jdbcType=INTEGER}, #{views,jdbcType=INTEGER},
        #{commentStatus,jdbcType=TINYINT}, #{status,jdbcType=TINYINT},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.liux.blog.bean.po.Article"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into t_article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">
                title,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
            <if test="authorId != null">
                author_id,
            </if>
            <if test="weight != null">
                weight,
            </if>
            <if test="views != null">
                views,
            </if>
            <if test="commentStatus != null">
                comment_status,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="authorId != null">
                #{authorId,jdbcType=INTEGER},
            </if>
            <if test="weight != null">
                #{weight,jdbcType=INTEGER},
            </if>
            <if test="views != null">
                #{views,jdbcType=INTEGER},
            </if>
            <if test="commentStatus != null">
                #{commentStatus,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.liux.blog.bean.po.Article">
        <!--@mbg.generated-->
        update t_article
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="authorId != null">
                author_id = #{authorId,jdbcType=INTEGER},
            </if>
            <if test="weight != null">
                weight = #{weight,jdbcType=INTEGER},
            </if>
            <if test="views != null">
                views = #{views,jdbcType=INTEGER},
            </if>
            <if test="commentStatus != null">
                comment_status = #{commentStatus,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyNullable" parameterType="com.liux.blog.bean.po.Article">
        <!--@mbg.generated-->
        update t_article
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="authorId != null">
                author_id = #{authorId,jdbcType=INTEGER},
            </if>
            <if test="weight != null or weight == null">
                weight = #{weight,jdbcType=INTEGER},
            </if>
            <if test="views != null">
                views = #{views,jdbcType=INTEGER},
            </if>
            <if test="commentStatus != null">
                comment_status = #{commentStatus,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.liux.blog.bean.po.Article">
        <!--@mbg.generated-->
        update t_article
        set title = #{title,jdbcType=VARCHAR},
        content = #{content,jdbcType=LONGVARCHAR},
        category_id = #{categoryId,jdbcType=INTEGER},
        author_id = #{authorId,jdbcType=INTEGER},
        weight = #{weight,jdbcType=INTEGER},
        views = #{views,jdbcType=INTEGER},
        comment_status = #{commentStatus,jdbcType=TINYINT},
        status = #{status,jdbcType=TINYINT},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByMoveCategory">
        <!--@mbg.generated-->
        update t_article
        set category_id    = #{newCategoryId,jdbcType=INTEGER}
        where category_id = #{oldCategoryId,jdbcType=INTEGER}
    </update>
</mapper>
